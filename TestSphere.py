from math import sqrt, tan
from Vec3D import Vec3D
from Ray import Ray
from Sphere import Sphere
from TestHelpers import *

data = []
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, 0.0, -10.0), Vec3D(0.0, 0.0, 1.0)), True, 5.0))
data.append((Sphere(Vec3D(0.0, 0.0, 5.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, 0.0, -10.0), Vec3D(0.0, 0.0, 1.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, 0.0, -15.0), Vec3D(0.0, 0.0, 1.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0, 0.0, -10.0), Vec3D(0.0, 0.0, 1.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-5.0, 0.0, -10.0), Vec3D(0.0, 0.0, 1.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, 5.0, -10.0), Vec3D(0.0, 0.0, 1.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, -5.0, -10.0), Vec3D(0.0, 0.0, 1.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * sqrt(0.5), 5.0 * sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * -sqrt(0.5), 5.0 * sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * sqrt(0.5), 5.0 * -sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * -sqrt(0.5), 5.0 * -sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 1.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * sqrt(0.5), 5.0 * sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 11.0))
data.append((Sphere(Vec3D(0.0, 0.0, 2.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * -sqrt(0.5), 5.0 * sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 12.0))
data.append((Sphere(Vec3D(0.0, 0.0, 3.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * sqrt(0.5), 5.0 * -sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 13.0))
data.append((Sphere(Vec3D(0.0, 0.0, 4.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * -sqrt(0.5), 5.0 * -sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 14.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D((5 - 5 * sqrt(0.5)) / tan(0.392699), 0.0, -10.0), Vec3D(0.0, 0.0, 1.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-(5 - 5 * sqrt(0.5)) / tan(0.392699), 0.0, -10.0), Vec3D(0.0, 0.0, 1.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, (5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, -(5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), -sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), -sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0), Vec3D(0.0, 0.0, 1.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, -10.0, 0.0), Vec3D(0.0, 1.0, 0.0)), True, 5.0))
data.append((Sphere(Vec3D(0.0, 5.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, -10.0, 0.0), Vec3D(0.0, 1.0, 0.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, -15.0, 0.0), Vec3D(0.0, 1.0, 0.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0, -10.0, 0.0), Vec3D(0.0, 1.0, 0.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-5.0, -10.0, 0.0), Vec3D(0.0, 1.0, 0.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, -10.0, 5.0), Vec3D(0.0, 1.0, 0.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, -10.0, -5.0), Vec3D(0.0, 1.0, 0.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * sqrt(0.5), -10.0, 5.0 * sqrt(0.5)), Vec3D(0.0, 1.0, 0.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * -sqrt(0.5), -10.0, 5.0 * sqrt(0.5)), Vec3D(0.0, 1.0, 0.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * sqrt(0.5), -10.0, 5.0 * -sqrt(0.5)), Vec3D(0.0, 1.0, 0.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * -sqrt(0.5), -10.0, 5.0 * -sqrt(0.5)), Vec3D(0.0, 1.0, 0.0)), True, 10.0))
data.append((Sphere(Vec3D(0.0, 1.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * sqrt(0.5), -10.0, 5.0 * sqrt(0.5)), Vec3D(0.0, 1.0, 0.0)), True, 11.0))
data.append((Sphere(Vec3D(0.0, 2.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * -sqrt(0.5), -10.0, 5.0 * sqrt(0.5)), Vec3D(0.0, 1.0, 0.0)), True, 12.0))
data.append((Sphere(Vec3D(0.0, 3.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * sqrt(0.5), -10.0, 5.0 * -sqrt(0.5)), Vec3D(0.0, 1.0, 0.0)), True, 13.0))
data.append((Sphere(Vec3D(0.0, 4.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0 * -sqrt(0.5), -10.0, 5.0 * -sqrt(0.5)), Vec3D(0.0, 1.0, 0.0)), True, 14.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D((5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0, 0.0), Vec3D(0.0, 1.0, 0.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-(5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0, 0.0), Vec3D(0.0, 1.0, 0.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, -10.0, (5 - 5 * sqrt(0.5)) / tan(0.392699)), Vec3D(0.0, 1.0, 0.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, -10.0, -(5 - 5 * sqrt(0.5)) / tan(0.392699)), Vec3D(0.0, 1.0, 0.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0, sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699)), Vec3D(0.0, 1.0, 0.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0, sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699)), Vec3D(0.0, 1.0, 0.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0, -sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699)), Vec3D(0.0, 1.0, 0.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699), -10.0, -sqrt(0.5) * (5 - 5 * sqrt(0.5)) / tan(0.392699)), Vec3D(0.0, 1.0, 0.0)), True, 5.0 + (5 - 5.0 * sqrt(0.5))))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(10.0 * sqrt(0.5), 0.0, 10.0 * sqrt(0.5)), Vec3D(-sqrt(0.5), 0.0, -sqrt(0.5))), True, 5.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-10.0 * sqrt(0.5), 0.0, 10.0 * sqrt(0.5)), Vec3D(sqrt(0.5), 0.0, -sqrt(0.5))), True, 5.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(10.0 * sqrt(0.5), 0.0, -10.0 * sqrt(0.5)), Vec3D(-sqrt(0.5), 0.0, sqrt(0.5))), True, 5.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-10.0 * sqrt(0.5), 0.0, -10.0 * sqrt(0.5)), Vec3D(sqrt(0.5), 0.0, sqrt(0.5))), True, 5.0))
data.append((Sphere(Vec3D(0.0, 2.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(10.0 * sqrt(0.5), 2.0, 10.0 * sqrt(0.5)), Vec3D(-sqrt(0.5), 0.0, -sqrt(0.5))), True, 5.0))
data.append((Sphere(Vec3D(0.0, 3.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-10.0 * sqrt(0.5), 3.0, 10.0 * sqrt(0.5)), Vec3D(sqrt(0.5), 0.0, -sqrt(0.5))), True, 5.0))
data.append((Sphere(Vec3D(0.0, 4.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(10.0 * sqrt(0.5), 4.0, -10.0 * sqrt(0.5)), Vec3D(-sqrt(0.5), 0.0, sqrt(0.5))), True, 5.0))
data.append((Sphere(Vec3D(0.0, 5.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-10.0 * sqrt(0.5), 5.0, -10.0 * sqrt(0.5)), Vec3D(sqrt(0.5), 0.0, sqrt(0.5))), True, 5.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, 0.0, -10.0), Vec3D(0.0, 0.0, 1.0) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 5.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, 0.0, -10.0), Vec3D(0.0, 0.0, 1.0) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, 0.0, -15.0), Vec3D(0.0, 0.0, 1.0) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.0, 0.0, -10.0), Vec3D(0.0, 0.0, 1.0) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-5.0, 0.0, -10.0), Vec3D(0.0, 0.0, 1.0) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, 5.0, -10.0), Vec3D(0.0, 0.0, 1.0) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(0.0, -5.0, -10.0), Vec3D(0.0, 0.0, 1.0) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.1 * sqrt(0.5), 5.1 * sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.1 * -sqrt(0.5), 5.1 * sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.1 * sqrt(0.5), 5.1 * -sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.1 * -sqrt(0.5), 5.1 * -sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 1.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.1 * sqrt(0.5), 5.1 * sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 2.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.1 * -sqrt(0.5), 5.1 * sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 3.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.1 * sqrt(0.5), 5.1 * -sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 4.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(5.1 * -sqrt(0.5), 5.1 * -sqrt(0.5), -10.0), Vec3D(0.0, 0.0, 1.0)), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(10.0 * sqrt(0.5), 0.0, 10.0 * sqrt(0.5)), Vec3D(-sqrt(0.5), 0.0, -sqrt(0.5)) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-10.0 * sqrt(0.5), 0.0, 10.0 * sqrt(0.5)), Vec3D(sqrt(0.5), 0.0, -sqrt(0.5)) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(10.0 * sqrt(0.5), 0.0, -10.0 * sqrt(0.5)), Vec3D(-sqrt(0.5), 0.0, sqrt(0.5)) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 0.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-10.0 * sqrt(0.5), 0.0, -10.0 * sqrt(0.5)), Vec3D(sqrt(0.5), 0.0, sqrt(0.5)) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 2.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(10.0 * sqrt(0.5), 2.0, 10.0 * sqrt(0.5)), Vec3D(-sqrt(0.5), 0.0, -sqrt(0.5)) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 3.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-10.0 * sqrt(0.5), 3.0, 10.0 * sqrt(0.5)), Vec3D(sqrt(0.5), 0.0, -sqrt(0.5)) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 4.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(10.0 * sqrt(0.5), 4.0, -10.0 * sqrt(0.5)), Vec3D(-sqrt(0.5), 0.0, sqrt(0.5)) * -1), False, 0.0))
data.append((Sphere(Vec3D(0.0, 5.0, 0.0), 5.0, Vec3D(0.0, 0.0, 0.0), 0.0), Ray(Vec3D(-10.0 * sqrt(0.5), 5.0, -10.0 * sqrt(0.5)), Vec3D(sqrt(0.5), 0.0, sqrt(0.5)) * -1), False, 0.0))

for collection in data:
    sphere = collection[0]
    ray = collection[1]
    expectedHit = collection[2]
    expectedDistance = collection[3]
    expectedNormal = ray.Origin() + ray.Direction() * expectedDistance
    expectedNormal -= sphere.CenterPoint()
    expectedNormal.Normalize()

    print("Testing sphere with center point:", Vec3DToString(sphere.CenterPoint()))
    print("and radius:", sphere.Radius())
    print("Against ray with origin:", Vec3DToString(ray.Origin()))
    print("and direction:", Vec3DToString(ray.Direction()))
    expectedReturn = (expectedHit, expectedDistance, Vec3DToString(expectedNormal))
    print("Expected return values:", expectedReturn)

    hit, distance, normal = sphere.Trace(ray)
    assert hit == expectedHit
    
    if hit == True:
        ApproximatelyEquals(distance, expectedDistance)
        ApproximatelyEquals(normal.X(), expectedNormal.X())
        ApproximatelyEquals(normal.Y(), expectedNormal.Y())
        ApproximatelyEquals(normal.Z(), expectedNormal.Z())

    print("")
print("All sphere tests succeeded")